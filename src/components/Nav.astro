---
const baseUrl = import.meta.env.BASE_URL;
const pathname = Astro.url.pathname;

export const links = [
  { label: "Home", url: "" },
  { label: "By Author", url: "abstracts/by-author/" },
  { label: "By Year", url: "abstracts/by-year/" },
  { label: "By Type", url: "abstracts/by-type/" },
];
---

<input type="checkbox" id="menu-toggle" />
<label for="menu-toggle">
  <span class="diagonal-1">&nbsp;</span>
  <span class="horizontal">&nbsp;</span>
  <span class="diagonal-2">&nbsp;</span>
</label>
<nav>
  {
    links.map(({ label, url }) => (
      <a
        class={pathname === baseUrl + url ? "active" : null}
        href={pathname === baseUrl + url ? null : baseUrl + url}
      >
        {label}
      </a>
    ))
  }
</nav>

<style>
  label {
    cursor: pointer;
    height: 22px;
    right: 15px;
    position: absolute;
    top: 18px;
    transition: all 0.3s;
    width: 22px;
    z-index: 99;

    span {
      background-color: var(--font-color-light);
      height: 3px;
      position: absolute;
      transition: all 0.3s;
      user-select: none;
      width: 100%;

      &.horizontal {
        float: left;
        margin-top: 3px;
        position: relative;
      }

      &.diagonal-1 {
        float: left;
        position: relative;
      }

      &.diagonal-2 {
        float: left;
        margin-top: 3px;
        position: relative;
      }
    }
  }

  input {
    display: none;

    &:checked ~ label {
      .horizontal {
        box-sizing: border-box;
        opacity: 0;
      }

      .diagonal-1 {
        box-sizing: border-box;
        transform: rotate(135deg);
        margin-top: 8px;
      }

      .diagonal-2 {
        box-sizing: border-box;
        transform: rotate(-135deg);
        margin-top: -9px;
      }
    }

    &:checked ~ nav {
      margin-top: 0;
      opacity: 1;
    }
  }

  nav {
    --nav-items: 4;
    --nav-item-height: 30px;
    --nav-vertical-gap: 0.5em;

    align-items: center;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: var(--nav-vertical-gap) 0.8em;
    justify-content: center;
    margin: 0 auto;
    margin-top: calc(
      -1 * (var(--nav-item-height) * var(--nav-items) + var(--nav-vertical-gap) *
            (var(--nav-items) - 1))
    );
    opacity: 0;
    padding: 0 0.5em;
    transition: margin-top 0.3s ease;
  }

  a {
    display: inline-block;
    position: relative;
    text-decoration: none;
    color: var(--font-color-light);
    font-size: 1.25em;
    font-variant: all-small-caps;
    height: var(--nav-item-height);
    white-space: nowrap;

    &:focus,
    &:hover {
      border-bottom: 1px dashed currentColor;
    }

    &:not([href]) {
      border-bottom: 2px solid currentColor;
    }
  }

  @media screen and (min-width: 640px) {
    label {
      display: none;
    }

    nav {
      flex-direction: row;
      gap: 2em;
      justify-content: flex-start;
      margin-top: 0;
      transition: none;
      opacity: 1;
    }
  }
</style>
